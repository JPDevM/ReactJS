{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jp/Documents/JPDevM/Dev/JPDevM CV on GitHub/react_practice/08-todo-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    name: 'todo 1',\n    complete: false\n  }, {\n    id: 2,\n    name: 'todo 2',\n    complete: true\n  }]);\n  const todoNameRef = useRef();\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value;\n    if (name === '') return setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * 100),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear completed todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"RV9lbU77P7bEAG+wWs7hyOnLteQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jp/Documents/JPDevM/Dev/JPDevM CV on GitHub/react_practice/08-todo-practice/src/App.js"],"names":["React","useState","useRef","TodoList","App","todos","setTodos","id","name","complete","todoNameRef","handleAddTodo","current","value","prevTodos","Math","floor","random"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CACpC,CACE;AAACM,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,QAAd;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GADF,EAEE;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,QAAd;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAFF,CADoC,CAApC;AAKA,QAAMC,WAAW,GAAGR,MAAM,EAA1B;;AAEA,WAASS,aAAT,GAAyB;AACvB,UAAMH,IAAI,GAAGE,WAAW,CAACE,OAAZ,CAAoBC,KAAjC;AACA,QAAIL,IAAI,KAAK,EAAb,EAAiB,OAAOF,QAAQ,CAACQ,SAAS,IAAI;AAC5C,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACP,QAAAA,EAAE,EAAEQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAL;AAAsCT,QAAAA,IAAI,EAAEA,IAA5C;AAAkDC,QAAAA,QAAQ,EAAE;AAA5D,OAAf,CAAP;AACD,KAF+B,CAAf;AAGjBC,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAER;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAGK,WAAb;AAA2B,MAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GAzBQP,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  const [ todos, setTodos ] = useState(\n  [\n    {id: 1, name: 'todo 1', complete: false},\n    {id: 2, name: 'todo 2', complete: true},\n  ])\n  const todoNameRef = useRef() \n  \n  function handleAddTodo() {\n    const name = todoNameRef.current.value\n    if (name === '') return setTodos(prevTodos => {\n      return [...prevTodos, {id: Math.floor(Math.random() * 100), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} />\n      <input ref={ todoNameRef } type=\"text\" />\n      <button onClick={handleAddTodo}>Add todo</button>\n      <button>Clear completed todos</button>\n      <div>0 left to do</div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}